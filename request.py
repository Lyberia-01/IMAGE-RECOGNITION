import requests
import json

url = "http://127.0.0.1:80/api/process_image"
payload = {
    "image": "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",
    "prompt": "Very short description of the image 1 or 2 lines"
}
headers = {"Content-Type": "application/json"}

response = requests.post(url, data=json.dumps(payload), headers=headers)

if response.status_code == 200:
    #Read the result from the returned dictionary
    print(response.json()["result"])
else:
    print(f"Error: {response.status_code}")
    print(response.text)